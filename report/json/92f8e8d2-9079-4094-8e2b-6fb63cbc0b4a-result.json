{"name": "test_demo[8-/-2-3]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <page.demo_page.Demo_page object at 0x108daf190>, expected = '3'\nactual = '4'\n\n    def assertin(self, expected, actual):\n        try:\n>           assert expected in actual\nE           AssertionError\n\nbase/base_action.py:21: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_demo.Test_demo object at 0x108e33550>, num1 = 8, ysf = '/'\nnum2 = 2, zhi = 3\n\n    @pytest.mark.run(order=1)\n    # 设置预言失败为False\n    @pytest.mark.xfail(False, reason=\"\")\n    # 参数化\n    @pytest.mark.parametrize([\"num1\", \"ysf\", \"num2\", \"zhi\"], get_data_yml())\n    def test_demo(self,num1, ysf, num2, zhi):\n        # 运算8*6\n        # allure.attach(\"测试运算是否正确\", \"测试\")\n        self.demo_page.yunsuan(num1, ysf, num2)\n>       self.demo_page.assertin_jieguo(zhi)\n\nscripts/test_demo.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage/demo_page.py:30: in assertin_jieguo\n    return self.assertin(expected_str, self.get_txt(self.jieguotxt))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.demo_page.Demo_page object at 0x108daf190>, expected = '3'\nactual = '4'\n\n    def assertin(self, expected, actual):\n        try:\n            assert expected in actual\n        except AssertionError:\n            print(\"预期结果为：%s  实际结果为%s\" % (expected, actual))\n>           raise AssertionError\nE           AssertionError\n\nbase/base_action.py:24: AssertionError"}, "parameters": [{"name": "num1", "value": "8"}, {"name": "ysf", "value": "'/'"}, {"name": "num2", "value": "2"}, {"name": "zhi", "value": "3"}], "start": 1587131429523, "stop": 1587131432855, "uuid": "1c25a7b6-cedf-42a0-980a-46d59b1db90e", "historyId": "b4e561c501eaa2d4f8b754e4253fcaf1", "testCaseId": "6354355d22db2b221caedbc87768f3fa", "fullName": "scripts.test_demo.Test_demo#test_demo", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_demo"}, {"name": "subSuite", "value": "Test_demo"}, {"name": "host", "value": "macdeMac.local"}, {"name": "thread", "value": "11905-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_demo"}]}