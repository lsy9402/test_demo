{"name": "test_demo[args3]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <page.demo_page.Demo_page object at 0x10f057a00>, expected = '2', actual = '4', screen = 'AssertionError'\n\n    def assertin(self, expected, actual, screen = \"AssertionError\"):\n        try:\n>           assert expected in actual\nE           AssertionError\n\nbase/base_action.py:22: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_demo.Test_demo object at 0x10f076cd0>, args = {'num1': 8, 'num2': 2, 'ysf': '/', 'zhi': 2}\n\n    @allure.step(title=\"demo的测试脚本\")\n    # 设置执行顺序=1\n    @pytest.mark.run(order=1)\n    # 设置预言失败为False\n    @pytest.mark.xfail(False, reason=\"\")\n    # 参数化\n    @pytest.mark.parametrize(\"args\", data_with_key('test_demo'))\n    def test_demo(self,args):\n        num1 = args[\"num1\"]\n        ysf = args[\"ysf\"]\n        num2 = args[\"num2\"]\n        zhi = args[\"zhi\"]\n        allure.attach(\"测试运算是否正确\", \"测试\")\n        self.demo_page.yunsuan(num1, ysf, num2)\n        self.demo_page.screenshot(\"demo\")\n>       self.demo_page.assertin_jieguo(zhi)\n\nscripts/test_demo.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage/demo_page.py:32: in assertin_jieguo\n    return self.assertin(expected_str, self.get_txt(self.jieguotxt))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <page.demo_page.Demo_page object at 0x10f057a00>, expected = '2', actual = '4', screen = 'AssertionError'\n\n    def assertin(self, expected, actual, screen = \"AssertionError\"):\n        try:\n            assert expected in actual\n        except AssertionError:\n            # 设置时间\n            now_time = time.strftime('%Y-%m-%d_%H:%M:%S')\n            self.screenshot(screen + now_time)\n            # print(\"预期结果为：%s  实际结果为%s\" % (expected, actual))\n>           raise AssertionError\nE           AssertionError\n\nbase/base_action.py:28: AssertionError"}, "steps": [{"name": "demo的测试脚本", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/mac/PycharmProjects/pytest_demos/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"/Users/mac/Desktop/project/scripts/test_demo.py\", line 41, in test_demo\n    self.demo_page.assertin_jieguo(zhi)\n  File \"/Users/mac/Desktop/project/page/demo_page.py\", line 32, in assertin_jieguo\n    return self.assertin(expected_str, self.get_txt(self.jieguotxt))\n  File \"/Users/mac/Desktop/project/base/base_action.py\", line 28, in assertin\n    raise AssertionError\n"}, "attachments": [{"name": "测试", "source": "53bbaf74-9042-4d1e-a99e-d63bfac11c87-attachment.attach"}], "parameters": [{"name": "args", "value": "{'num1': 8, 'ysf': '/', 'num2': 2, 'zhi': 2}"}], "start": 1587187655580, "stop": 1587187666841}], "parameters": [{"name": "args", "value": "{'num1': 8, 'ysf': '/', 'num2': 2, 'zhi': 2}"}], "start": 1587187655580, "stop": 1587187666845, "uuid": "859777dd-4766-40a7-9a1c-7f6c5b099832", "historyId": "cd754ca487bc60fd47d639291000eb42", "testCaseId": "6354355d22db2b221caedbc87768f3fa", "fullName": "scripts.test_demo.Test_demo#test_demo", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_demo"}, {"name": "subSuite", "value": "Test_demo"}, {"name": "host", "value": "macdeMac.local"}, {"name": "thread", "value": "9264-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_demo"}]}